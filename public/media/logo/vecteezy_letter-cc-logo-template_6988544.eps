%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 3360 1680 
%%LanguageLevel: 2
%%Creator: CorelDRAW X8
%%Title: letter cc logo template.eps
%%CreationDate: Thu Mar 31 09:35:58 2022
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW X8 Version 18.0.0.448
/EpsFile true def
%%BeginResource: procset wCorel18Dict 18.0 0
/wCorel18Dict 300 dict def wCorel18Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel18Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 841 595
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 3359.99962 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9725 0.9725 0.9725  create_rgb_color set_solid_fill
0.00000 1679.99981 m
3359.99962 1679.99981 L
3359.99962 0.00000 L
0.00000 0.00000 L
0.00000 1679.99981 L
@c
F

@rax %Note: Object
0.00000 0.00000 512.35994 805.37726 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
512.35994 0.00000 m
0.00000 805.37726 L
0.00000 257.64775 L
163.90885 0.00000 L
512.35994 0.00000 L
@c
F

@rax %Note: Object
0.00000 0.00000 1130.85836 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
0.00000 1229.86403 m
782.40728 0.00000 L
1130.85836 0.00000 L
62.08668 1679.99981 L
0.00000 1679.99981 L
0.00000 1229.86403 L
@c
F

@rax %Note: Object
355.58504 0.00000 1772.80809 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
355.58504 1679.99981 m
1424.35701 0.00000 L
1772.80809 0.00000 L
704.03641 1679.99981 L
355.58504 1679.99981 L
@c
F

@rax %Note: Object
988.82816 0.00000 2406.05093 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
988.82816 1679.99981 m
2057.59984 0.00000 L
2406.05093 0.00000 L
1337.27924 1679.99981 L
988.82816 1679.99981 L
@c
F

@rax %Note: Object
1668.98608 0.00000 3086.20885 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
1668.98608 1679.99981 m
2737.75776 0.00000 L
3086.20885 0.00000 L
2017.43717 1679.99981 L
1668.98608 1679.99981 L
@c
F

@rax %Note: Object
2307.13200 24.99959 3359.99962 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
2307.13200 1679.99981 m
3359.99962 24.99959 L
3359.99962 572.72910 L
2655.58309 1679.99981 L
2307.13200 1679.99981 L
@c
F

@rax %Note: Object
2888.49487 938.84287 3359.99962 1679.99981 @E
/$fm 0 def
 0 O 0 @g
0.9020 0.9020 0.9020  create_rgb_color set_solid_fill
2888.49487 1679.99981 m
3359.99962 938.84287 L
3359.99962 1486.57209 L
3236.94595 1679.99981 L
2888.49487 1679.99981 L
@c
F

@rax %Note: Object
136.99020 149.88416 1562.20951 1577.36154 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
136.99020 149.88416 m
1562.20951 149.88416 L
1562.20951 1577.36154 L
136.99020 1577.36154 L
136.99020 149.88416 L
@c
F

@rax %Note: Object
193.88013 102.63827 754.93020 149.88416 @E
/$fm 1 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
193.88013 149.88416 m
193.88013 102.63827 L
754.93020 149.88416 L
193.88013 149.88416 L
@c
F

@rax %Note: Object
940.85263 102.63827 1501.90498 149.88416 @E
/$fm 1 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
1501.90498 149.88416 m
1501.90498 102.63827 L
940.85263 149.88416 L
1501.90498 149.88416 L
@c
F

@rax %Note: Object
1797.79011 149.88416 3223.00942 1577.36154 @E
/$fm 1 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
1797.79011 149.88416 m
3223.00942 149.88416 L
3223.00942 1577.36154 L
1797.79011 1577.36154 L
1797.79011 149.88416 L
@c
F

@rax %Note: Object
1854.68003 102.63827 2415.73011 149.88416 @E
/$fm 1 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
1854.68003 149.88416 m
1854.68003 102.63827 L
2415.73011 149.88416 L
1854.68003 149.88416 L
@c
F

@rax %Note: Object
2601.65254 102.63827 3162.70488 149.88416 @E
/$fm 1 def
 0 O 0 @g
0.7020 0.7020 0.7020  create_rgb_color set_solid_fill
3162.70488 149.88416 m
3162.70488 102.63827 L
2601.65254 149.88416 L
3162.70488 149.88416 L
@c
F

@rax %Note: Object
479.87717 707.64491 1219.32255 780.39014 @E
/$fm 1 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
479.87717 708.84510 m
527.39830 708.84510 L
527.39830 716.17890 L
487.80652 716.17890 L
487.80652 779.18769 L
479.87717 779.18769 L
479.87717 708.84510 L
@c
613.20076 744.11717 m
613.20076 749.00948 612.35348 753.64980 610.63795 758.03131 C
608.93603 762.42189 606.49682 766.26992 603.35433 769.59326 C
600.21213 772.91206 596.43751 775.53666 592.05600 777.47669 C
587.66769 779.42580 582.79124 780.39014 577.43858 780.39014 C
572.07685 780.39014 567.18000 779.40283 562.75965 777.42624 C
558.33449 775.44510 554.55307 772.78139 551.40378 769.44217 C
548.26129 766.08652 545.81074 762.22035 544.06772 757.83203 C
542.32469 753.44825 541.46353 748.80567 541.46353 743.91562 C
541.46353 739.02784 542.31789 734.39235 544.02406 730.00602 C
545.73279 725.61317 548.16066 721.76287 551.30995 718.44661 C
554.45471 715.13461 558.22677 712.49613 562.61310 710.56290 C
566.99915 708.61153 571.87304 707.64491 577.23477 707.64491 C
582.58743 707.64491 587.47975 708.63222 591.90236 710.61335 C
596.32299 712.58542 600.11121 715.24687 603.25143 718.59543 C
606.40072 721.95307 608.84674 725.81698 610.58976 730.20076 C
612.32825 734.59134 613.20076 739.22485 613.20076 744.11717 C
@c
604.96243 743.91562 m
604.96243 739.90063 604.27757 736.12828 602.90107 732.61020 C
601.53137 729.09694 599.63953 726.03468 597.22753 723.42113 C
594.81581 720.80787 591.92079 718.74652 588.53565 717.23962 C
585.14570 715.73244 581.45131 714.98126 577.43858 714.98126 C
573.41452 714.98126 569.70850 715.74605 566.33244 717.29206 C
562.94504 718.83581 560.00891 720.90170 557.53512 723.52658 C
555.05254 726.13757 553.13320 729.21600 551.75896 732.76611 C
550.38217 736.31622 549.70214 740.10217 549.70214 744.11717 C
549.70214 748.13698 550.38217 751.90224 551.75896 755.42031 C
553.13320 758.94746 555.02504 762.00520 557.43449 764.61619 C
559.83713 767.23172 562.74803 769.29307 566.12636 770.79572 C
569.50469 772.30517 573.21071 773.05635 577.23477 773.05635 C
581.24523 773.05635 584.95351 772.28674 588.33865 770.74299 C
591.72378 769.20831 594.65083 767.12655 597.12463 764.52236 C
599.60750 761.90655 601.53137 758.82161 602.90107 755.26923 C
604.27757 751.72365 604.96243 747.93515 604.96243 743.91562 C
@c
694.67924 708.84510 m
673.07839 737.57140 L
675.82460 738.04082 678.37153 738.84699 680.71465 739.97631 C
683.06003 741.12151 685.08482 742.54592 686.79780 744.25011 C
688.50198 745.96564 689.82350 747.96973 690.76261 750.27600 C
691.70173 752.59616 692.16661 755.22104 692.16661 758.16879 C
692.16661 761.31581 691.57106 764.19694 690.35726 766.77364 C
689.15707 769.35515 687.44835 771.56759 685.23817 773.40898 C
683.02346 775.24583 680.36428 776.67506 677.25383 777.67597 C
674.13203 778.68369 670.63918 779.18769 666.74324 779.18769 C
636.50098 779.18769 L
636.50098 708.84510 L
644.44620 708.84510 L
644.44620 736.18554 L
664.53987 736.18554 L
684.93572 708.84510 L
694.67924 708.84510 L
@c
684.23272 757.83203 m
684.23272 755.56233 683.78372 753.49871 682.87209 751.68709 C
681.96983 749.86384 680.71465 748.34532 679.09294 747.10375 C
677.48287 745.86019 675.57515 744.89584 673.34882 744.21808 C
671.13638 743.54910 668.72438 743.21263 666.09978 743.21263 C
644.44620 743.21263 L
644.44620 771.85162 L
666.19361 771.85162 L
671.91052 771.85162 676.34220 770.62847 679.49376 768.16176 C
682.65468 765.71802 684.23272 762.27080 684.23272 757.83203 C
@c
766.51483 779.18769 m
715.67291 779.18769 L
715.67291 708.84510 L
767.01883 708.84510 L
767.01883 716.08507 L
723.61134 716.08507 L
723.61134 740.69773 L
761.99613 740.69773 L
761.99613 747.93515 L
723.61134 747.93515 L
723.61134 771.95225 L
766.51483 771.95225 L
766.51483 779.18769 L
@c
848.90239 765.82318 m
848.90239 708.84510 L
856.83402 708.84510 L
856.83402 779.18769 L
848.79694 779.18769 L
823.17430 740.80517 L
797.54939 779.18769 L
789.51742 779.18769 L
789.51742 708.84510 L
797.25402 708.84510 L
797.25402 765.71802 L
822.87439 728.14167 L
823.27521 728.14167 L
848.90239 765.82318 L
@c
897.92362 708.84510 m
897.92362 779.18769 L
882.45184 779.18769 L
882.45184 708.84510 L
897.92362 708.84510 L
@c
977.69792 754.66913 m
977.69792 754.87294 L
977.69792 769.24290 967.54450 779.18769 950.77191 779.18769 C
922.03455 779.18769 L
922.03455 708.84510 L
937.50151 708.84510 L
937.50151 729.95357 L
949.26246 729.95357 L
965.03641 729.95357 977.69792 738.39118 977.69792 754.66913 C
@c
962.02460 754.36214 m
962.02460 748.34532 957.49880 743.71635 949.76192 743.71635 C
937.50151 743.71635 L
937.50151 765.21855 L
949.45946 765.21855 L
957.19890 765.21855 962.02460 761.50120 962.02460 754.56595 C
962.02460 754.36214 L
@c
1046.51490 729.65112 m
1046.51490 729.85039 L
1046.51490 742.10854 1038.48009 747.23669 1024.20879 750.94951 C
1012.05354 754.06677 1009.03946 755.57594 1009.03946 760.19357 C
1009.03946 760.39512 L
1009.03946 763.81682 1012.15446 766.52646 1018.08652 766.52646 C
1024.01405 766.52646 1030.13858 763.91291 1036.36602 759.60028 C
1044.40535 771.25380 L
1037.27083 776.97298 1028.53304 780.19313 1018.28580 780.19313 C
1003.91357 780.19313 993.66406 771.75524 993.66406 758.98885 C
993.66406 758.78249 L
993.66406 744.82271 1002.80976 740.90381 1016.97335 737.28028 C
1028.72778 734.27528 1031.14176 732.26438 1031.14176 728.34094 C
1031.14176 728.14167 L
1031.14176 724.02123 1027.32605 721.51342 1020.99770 721.51342 C
1012.95609 721.51342 1006.32529 724.82769 999.99241 730.04967 C
990.85380 719.09461 L
999.29169 711.56381 1010.04491 707.84419 1020.69524 707.84419 C
1035.86683 707.84419 1046.51490 715.67972 1046.51490 729.65112 C
@c
1126.69002 739.50208 m
1126.69002 779.18769 L
1111.21824 779.18769 L
1111.21824 738.89291 L
1111.21824 727.73631 1105.48545 722.01487 1096.04920 722.01487 C
1086.59679 722.01487 1080.86854 727.94466 1080.86854 739.39209 C
1080.86854 779.18769 L
1065.39902 779.18769 L
1065.39902 738.99581 L
1065.39902 718.30006 1076.95191 707.74583 1095.84057 707.74583 C
1114.73178 707.74583 1126.69002 718.19235 1126.69002 739.50208 C
@c
1219.32255 708.84510 m
1219.32255 779.18769 L
1202.64605 779.18769 L
1184.15112 749.44687 L
1165.66781 779.18769 L
1148.98932 779.18769 L
1148.98932 708.84510 L
1164.16063 708.84510 L
1164.16063 754.46759 L
1183.75030 724.72450 L
1184.15112 724.72450 L
1203.95169 754.76523 L
1203.95169 708.84510 L
1219.32255 708.84510 L
@c
F

@rax %Note: Object
627.77906 637.95090 1071.41839 672.95934 @E
/$fm 1 def
 0 O 0 @g
0.1922 0.1804 0.2627  create_rgb_color set_solid_fill
661.24403 672.37767 m
652.77184 672.37767 L
644.55846 658.79093 L
636.48028 672.37767 L
627.77906 672.37767 L
640.78639 651.87411 L
640.78639 638.53257 L
648.23471 638.53257 L
648.23471 652.02066 L
661.24403 672.37767 L
@c
705.80353 655.45625 m
705.80353 655.55461 L
705.80353 665.17880 698.30249 672.95934 687.86079 672.95934 C
677.41427 672.95934 669.82847 665.07137 669.82847 655.45625 C
669.82847 655.36243 L
669.82847 645.74277 677.32271 637.95090 687.76214 637.95090 C
698.21093 637.95090 705.80353 645.83660 705.80353 655.45625 C
@c
698.01846 655.36243 m
698.01846 649.55622 693.85691 644.81726 687.86079 644.81726 C
681.86211 644.81726 677.61354 649.65458 677.61354 655.45625 C
677.61354 655.55461 L
677.61354 661.35402 681.76602 666.09269 687.76214 666.09269 C
693.75855 666.09269 698.01846 661.25764 698.01846 655.45625 C
698.01846 655.36243 L
@c
749.73317 653.28038 m
749.73317 672.37767 L
742.28712 672.37767 L
742.28712 652.99181 L
742.28712 647.62072 739.52957 644.86545 734.98309 644.86545 C
730.44142 644.86545 727.67906 647.71483 727.67906 653.23446 C
727.67906 672.37767 L
720.23528 672.37767 L
720.23528 653.03291 L
720.23528 643.07424 725.79628 637.99880 734.88699 637.99880 C
743.97061 637.99880 749.73317 643.02633 749.73317 653.28038 C
@c
794.91770 638.53257 m
786.65216 650.61439 L
790.95118 652.21540 793.90998 655.64872 793.90998 661.11109 C
793.90998 661.20520 L
793.90998 668.17474 789.11660 672.37767 781.13906 672.37767 C
765.66529 672.37767 L
765.66529 638.53257 L
773.11134 638.53257 L
773.11134 649.35921 L
778.95865 649.35921 L
786.21449 638.53257 L
794.91770 638.53257 L
@c
786.36104 660.72643 m
786.36104 657.87477 784.27928 655.94409 780.65348 655.94409 C
773.11134 655.94409 L
773.11134 665.66211 L
780.50693 665.66211 L
784.13953 665.66211 786.36104 664.01093 786.36104 660.82252 C
786.36104 660.72643 L
@c
847.94258 648.54142 m
847.94258 648.64006 L
847.94258 654.53556 844.06961 656.99773 837.20069 658.79093 C
831.34885 660.29131 829.90346 661.01726 829.90346 663.24132 C
829.90346 663.33969 L
829.90346 664.98661 831.40129 666.28743 834.25294 666.28743 C
837.10913 666.28743 840.06142 665.02998 843.05962 662.95049 C
846.92580 668.55940 L
843.49701 671.31496 839.28501 672.86551 834.35613 672.86551 C
827.43902 672.86551 822.50787 668.80233 822.50787 662.66419 C
822.50787 662.55874 L
822.50787 655.84091 826.89846 653.94907 833.72400 652.21540 C
839.38110 650.76775 840.54472 649.79887 840.54472 647.90249 C
840.54472 647.81773 L
840.54472 645.83660 838.70787 644.62025 835.66148 644.62025 C
831.79531 644.62025 828.60491 646.22126 825.55398 648.73843 C
821.15433 643.45918 L
825.21043 639.83792 830.38904 638.04472 835.51720 638.04472 C
842.81669 638.04472 847.94258 641.81707 847.94258 648.54142 C
@c
887.08762 638.53257 m
887.08762 645.30057 L
870.21213 645.30057 L
870.21213 672.37767 L
862.76835 672.37767 L
862.76835 638.53257 L
887.08762 638.53257 L
@c
933.58035 655.45625 m
933.58035 655.55461 L
933.58035 665.17880 926.08611 672.95934 915.63959 672.95934 C
905.19789 672.95934 897.60047 665.07137 897.60047 655.45625 C
897.60047 655.36243 L
897.60047 645.74277 905.09471 637.95090 915.53669 637.95090 C
925.98775 637.95090 933.58035 645.83660 933.58035 655.45625 C
@c
925.79754 655.36243 m
925.79754 649.55622 921.63827 644.81726 915.63959 644.81726 C
909.64120 644.81726 905.38554 649.65458 905.38554 655.45625 C
905.38554 655.55461 L
905.38554 661.35402 909.55191 666.09269 915.53669 666.09269 C
921.54189 666.09269 925.79754 661.25764 925.79754 655.45625 C
925.79754 655.36243 L
@c
979.30120 643.31943 m
979.30120 658.01906 L
964.59676 658.01906 L
964.59676 651.58328 L
972.09780 651.58328 L
972.09780 646.75502 L
970.20595 645.39439 967.79424 644.72343 965.08460 644.72343 C
959.08620 644.72343 954.82828 649.26539 954.82828 655.45625 C
954.82828 655.55461 L
954.82828 661.30809 959.13865 666.09269 964.55310 666.09269 C
968.46520 666.09269 970.78989 664.83524 973.39861 662.66419 C
978.08939 668.31902 L
974.55997 671.31496 970.89307 672.95934 964.79376 672.95934 C
954.55106 672.95934 947.04775 665.07137 947.04775 655.45625 C
947.04775 655.36243 L
947.04775 645.34876 954.30132 637.95090 964.83487 637.95090 C
971.02828 637.95090 975.81742 640.36942 979.30120 643.31943 C
@c
1027.77959 638.53257 m
1013.26762 672.62485 L
1006.40324 672.62485 L
991.89581 638.53257 L
999.48869 638.53257 L
1002.57817 646.12743 L
1016.90249 646.12743 L
1019.99452 638.53257 L
1027.77959 638.53257 L
@c
1014.23395 652.70551 m
1005.24189 652.70551 L
1009.74501 663.67644 L
1014.23395 652.70551 L
@c
1071.41839 638.53257 m
1071.41839 672.37767 L
1064.07298 672.37767 L
1064.07298 651.53509 L
1048.20973 672.37767 L
1041.34535 672.37767 L
1041.34535 638.53257 L
1048.69077 638.53257 L
1048.69077 660.05065 L
1065.08296 638.53257 L
1071.41839 638.53257 L
@c
F

@rax %Note: Object
707.95928 828.23669 991.24044 1089.29480 @E
/$fm 0 def
 0 O 0 @g
0.7451 0.6314 0.3137  create_rgb_color set_solid_fill
880.88598 1068.14069 m
852.43436 1068.14069 823.98472 1068.14069 795.53310 1068.14069 C
786.38910 1052.30268 L
782.31798 1045.25150 778.24658 1038.20003 774.17546 1031.14885 C
763.10787 1011.97871 L
787.42120 1011.97871 L
789.51798 1015.25669 L
813.21562 1052.30268 L
887.60523 1052.30268 L
895.49320 1064.63395 903.37946 1076.96438 911.26743 1089.29480 C
934.04381 1089.29480 L
990.89518 990.82403 L
966.46762 990.82403 L
951.74901 1016.31742 937.03068 1041.81080 922.31291 1067.30476 C
908.47219 1045.66677 L
943.55178 990.82403 L
845.31345 990.82403 L
825.22942 959.42608 L
846.16157 926.70293 L
941.13298 926.70293 L
930.27033 909.72170 919.40882 892.74019 908.54646 875.75953 C
914.22879 866.87575 L
923.52983 852.33543 L
931.92491 866.87575 L
944.13827 888.03043 L
966.81345 927.30586 L
991.24044 927.30586 L
936.36907 832.26416 L
934.04381 828.23669 L
913.83279 828.23669 L
905.59417 841.11647 897.35528 853.99654 889.11723 866.87575 C
810.24009 866.87575 L
785.50328 905.54825 L
763.11043 905.54825 L
795.53310 849.39024 L
878.71039 849.39024 L
891.57912 828.23669 L
855.49238 828.23669 819.40649 828.23669 783.31975 828.23669 C
764.37071 861.05906 745.42167 893.88113 726.47178 926.70293 C
750.00869 926.70293 773.54589 926.70293 797.08394 926.70293 C
800.69131 921.06312 L
821.82076 888.03043 L
839.74167 888.03043 857.66457 888.03043 875.58633 888.03043 C
891.28375 888.03043 L
902.48882 905.54825 L
879.85276 905.54825 857.21726 905.54825 834.58120 905.54825 C
825.48935 919.76202 816.39751 933.97521 807.30595 948.18813 C
714.06680 948.18813 L
707.95928 958.76589 L
714.06539 969.34309 L
806.46094 969.34309 L
815.55194 983.55430 824.64208 997.76665 833.73307 1011.97871 C
857.45849 1011.97871 881.18334 1011.97871 904.90876 1011.97871 C
892.64693 1031.14885 L
824.79515 1031.14885 L
812.53247 1011.97871 L
802.07405 995.62649 L
799.00157 990.82403 L
774.82403 990.82403 750.64592 990.82403 726.46838 990.82403 C
738.68173 1011.97871 L
745.63994 1024.03049 L
757.40683 1044.41301 768.76072 1064.07865 783.31975 1089.29480 C
820.84904 1089.29480 858.37663 1089.29480 895.90507 1089.29480 C
880.88598 1068.14069 L
@c
F

@rax %Note: Object
2140.67707 707.64491 2880.12246 780.39014 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2140.67707 708.84510 m
2188.19820 708.84510 L
2188.19820 716.17890 L
2148.60643 716.17890 L
2148.60643 779.18769 L
2140.67707 779.18769 L
2140.67707 708.84510 L
@c
2274.00066 744.11717 m
2274.00066 749.00948 2273.15339 753.64980 2271.43786 758.03131 C
2269.73594 762.42189 2267.29672 766.26992 2264.15424 769.59326 C
2261.01203 772.91206 2257.23742 775.53666 2252.85591 777.47669 C
2248.46759 779.42580 2243.59115 780.39014 2238.23849 780.39014 C
2232.87676 780.39014 2227.97991 779.40283 2223.55956 777.42624 C
2219.13439 775.44510 2215.35298 772.78139 2212.20369 769.44217 C
2209.06120 766.08652 2206.61065 762.22035 2204.86762 757.83203 C
2203.12460 753.44825 2202.26343 748.80567 2202.26343 743.91562 C
2202.26343 739.02784 2203.11780 734.39235 2204.82397 730.00602 C
2206.53269 725.61317 2208.96057 721.76287 2212.10986 718.44661 C
2215.25461 715.13461 2219.02668 712.49613 2223.41301 710.56290 C
2227.79906 708.61153 2232.67294 707.64491 2238.03468 707.64491 C
2243.38734 707.64491 2248.27965 708.63222 2252.70227 710.61335 C
2257.12290 712.58542 2260.91112 715.24687 2264.05134 718.59543 C
2267.20063 721.95307 2269.64665 725.81698 2271.38967 730.20076 C
2273.12816 734.59134 2274.00066 739.22485 2274.00066 744.11717 C
@c
2265.76233 743.91562 m
2265.76233 739.90063 2265.07748 736.12828 2263.70098 732.61020 C
2262.33128 729.09694 2260.43943 726.03468 2258.02743 723.42113 C
2255.61572 720.80787 2252.72069 718.74652 2249.33556 717.23962 C
2245.94561 715.73244 2242.25121 714.98126 2238.23849 714.98126 C
2234.21443 714.98126 2230.50841 715.74605 2227.13235 717.29206 C
2223.74494 718.83581 2220.80882 720.90170 2218.33502 723.52658 C
2215.85244 726.13757 2213.93310 729.21600 2212.55887 732.76611 C
2211.18208 736.31622 2210.50205 740.10217 2210.50205 744.11717 C
2210.50205 748.13698 2211.18208 751.90224 2212.55887 755.42031 C
2213.93310 758.94746 2215.82494 762.00520 2218.23439 764.61619 C
2220.63704 767.23172 2223.54794 769.29307 2226.92627 770.79572 C
2230.30460 772.30517 2234.01061 773.05635 2238.03468 773.05635 C
2242.04513 773.05635 2245.75342 772.28674 2249.13855 770.74299 C
2252.52369 769.20831 2255.45074 767.12655 2257.92454 764.52236 C
2260.40740 761.90655 2262.33128 758.82161 2263.70098 755.26923 C
2265.07748 751.72365 2265.76233 747.93515 2265.76233 743.91562 C
@c
2355.47915 708.84510 m
2333.87830 737.57140 L
2336.62450 738.04082 2339.17143 738.84699 2341.51455 739.97631 C
2343.85994 741.12151 2345.88472 742.54592 2347.59770 744.25011 C
2349.30189 745.96564 2350.62340 747.96973 2351.56252 750.27600 C
2352.50164 752.59616 2352.96652 755.22104 2352.96652 758.16879 C
2352.96652 761.31581 2352.37096 764.19694 2351.15717 766.77364 C
2349.95698 769.35515 2348.24825 771.56759 2346.03808 773.40898 C
2343.82337 775.24583 2341.16419 776.67506 2338.05373 777.67597 C
2334.93194 778.68369 2331.43909 779.18769 2327.54315 779.18769 C
2297.30088 779.18769 L
2297.30088 708.84510 L
2305.24611 708.84510 L
2305.24611 736.18554 L
2325.33978 736.18554 L
2345.73562 708.84510 L
2355.47915 708.84510 L
@c
2345.03263 757.83203 m
2345.03263 755.56233 2344.58362 753.49871 2343.67200 751.68709 C
2342.76973 749.86384 2341.51455 748.34532 2339.89285 747.10375 C
2338.28277 745.86019 2336.37506 744.89584 2334.14872 744.21808 C
2331.93628 743.54910 2329.52428 743.21263 2326.89969 743.21263 C
2305.24611 743.21263 L
2305.24611 771.85162 L
2326.99351 771.85162 L
2332.71043 771.85162 2337.14211 770.62847 2340.29367 768.16176 C
2343.45458 765.71802 2345.03263 762.27080 2345.03263 757.83203 C
@c
2427.31474 779.18769 m
2376.47282 779.18769 L
2376.47282 708.84510 L
2427.81874 708.84510 L
2427.81874 716.08507 L
2384.41124 716.08507 L
2384.41124 740.69773 L
2422.79603 740.69773 L
2422.79603 747.93515 L
2384.41124 747.93515 L
2384.41124 771.95225 L
2427.31474 771.95225 L
2427.31474 779.18769 L
@c
2509.70230 765.82318 m
2509.70230 708.84510 L
2517.63392 708.84510 L
2517.63392 779.18769 L
2509.59685 779.18769 L
2483.97420 740.80517 L
2458.34929 779.18769 L
2450.31732 779.18769 L
2450.31732 708.84510 L
2458.05392 708.84510 L
2458.05392 765.71802 L
2483.67430 728.14167 L
2484.07512 728.14167 L
2509.70230 765.82318 L
@c
2558.72353 708.84510 m
2558.72353 779.18769 L
2543.25175 779.18769 L
2543.25175 708.84510 L
2558.72353 708.84510 L
@c
2638.49783 754.66913 m
2638.49783 754.87294 L
2638.49783 769.24290 2628.34441 779.18769 2611.57181 779.18769 C
2582.83446 779.18769 L
2582.83446 708.84510 L
2598.30142 708.84510 L
2598.30142 729.95357 L
2610.06236 729.95357 L
2625.83631 729.95357 2638.49783 738.39118 2638.49783 754.66913 C
@c
2622.82450 754.36214 m
2622.82450 748.34532 2618.29871 743.71635 2610.56183 743.71635 C
2598.30142 743.71635 L
2598.30142 765.21855 L
2610.25937 765.21855 L
2617.99880 765.21855 2622.82450 761.50120 2622.82450 754.56595 C
2622.82450 754.36214 L
@c
2707.31480 729.65112 m
2707.31480 729.85039 L
2707.31480 742.10854 2699.28000 747.23669 2685.00869 750.94951 C
2672.85345 754.06677 2669.83937 755.57594 2669.83937 760.19357 C
2669.83937 760.39512 L
2669.83937 763.81682 2672.95436 766.52646 2678.88643 766.52646 C
2684.81395 766.52646 2690.93849 763.91291 2697.16592 759.60028 C
2705.20526 771.25380 L
2698.07074 776.97298 2689.33294 780.19313 2679.08570 780.19313 C
2664.71348 780.19313 2654.46397 771.75524 2654.46397 758.98885 C
2654.46397 758.78249 L
2654.46397 744.82271 2663.60967 740.90381 2677.77326 737.28028 C
2689.52769 734.27528 2691.94167 732.26438 2691.94167 728.34094 C
2691.94167 728.14167 L
2691.94167 724.02123 2688.12595 721.51342 2681.79761 721.51342 C
2673.75600 721.51342 2667.12520 724.82769 2660.79231 730.04967 C
2651.65370 719.09461 L
2660.09159 711.56381 2670.84482 707.84419 2681.49515 707.84419 C
2696.66674 707.84419 2707.31480 715.67972 2707.31480 729.65112 C
@c
2787.48992 739.50208 m
2787.48992 779.18769 L
2772.01814 779.18769 L
2772.01814 738.89291 L
2772.01814 727.73631 2766.28535 722.01487 2756.84910 722.01487 C
2747.39669 722.01487 2741.66844 727.94466 2741.66844 739.39209 C
2741.66844 779.18769 L
2726.19893 779.18769 L
2726.19893 738.99581 L
2726.19893 718.30006 2737.75181 707.74583 2756.64047 707.74583 C
2775.53169 707.74583 2787.48992 718.19235 2787.48992 739.50208 C
@c
2880.12246 708.84510 m
2880.12246 779.18769 L
2863.44595 779.18769 L
2844.95102 749.44687 L
2826.46772 779.18769 L
2809.78923 779.18769 L
2809.78923 708.84510 L
2824.96054 708.84510 L
2824.96054 754.46759 L
2844.55020 724.72450 L
2844.95102 724.72450 L
2864.75159 754.76523 L
2864.75159 708.84510 L
2880.12246 708.84510 L
@c
F

@rax %Note: Object
2288.57896 637.95090 2732.21830 672.95934 @E
/$fm 1 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2322.04394 672.37767 m
2313.57175 672.37767 L
2305.35836 658.79093 L
2297.28019 672.37767 L
2288.57896 672.37767 L
2301.58630 651.87411 L
2301.58630 638.53257 L
2309.03461 638.53257 L
2309.03461 652.02066 L
2322.04394 672.37767 L
@c
2366.60343 655.45625 m
2366.60343 655.55461 L
2366.60343 665.17880 2359.10239 672.95934 2348.66069 672.95934 C
2338.21417 672.95934 2330.62838 665.07137 2330.62838 655.45625 C
2330.62838 655.36243 L
2330.62838 645.74277 2338.12261 637.95090 2348.56205 637.95090 C
2359.01083 637.95090 2366.60343 645.83660 2366.60343 655.45625 C
@c
2358.81836 655.36243 m
2358.81836 649.55622 2354.65682 644.81726 2348.66069 644.81726 C
2342.66202 644.81726 2338.41345 649.65458 2338.41345 655.45625 C
2338.41345 655.55461 L
2338.41345 661.35402 2342.56592 666.09269 2348.56205 666.09269 C
2354.55846 666.09269 2358.81836 661.25764 2358.81836 655.45625 C
2358.81836 655.36243 L
@c
2410.53307 653.28038 m
2410.53307 672.37767 L
2403.08702 672.37767 L
2403.08702 652.99181 L
2403.08702 647.62072 2400.32948 644.86545 2395.78299 644.86545 C
2391.24132 644.86545 2388.47896 647.71483 2388.47896 653.23446 C
2388.47896 672.37767 L
2381.03518 672.37767 L
2381.03518 653.03291 L
2381.03518 643.07424 2386.59619 637.99880 2395.68690 637.99880 C
2404.77052 637.99880 2410.53307 643.02633 2410.53307 653.28038 C
@c
2455.71761 638.53257 m
2447.45206 650.61439 L
2451.75109 652.21540 2454.70989 655.64872 2454.70989 661.11109 C
2454.70989 661.20520 L
2454.70989 668.17474 2449.91650 672.37767 2441.93896 672.37767 C
2426.46520 672.37767 L
2426.46520 638.53257 L
2433.91124 638.53257 L
2433.91124 649.35921 L
2439.75855 649.35921 L
2447.01439 638.53257 L
2455.71761 638.53257 L
@c
2447.16094 660.72643 m
2447.16094 657.87477 2445.07918 655.94409 2441.45339 655.94409 C
2433.91124 655.94409 L
2433.91124 665.66211 L
2441.30683 665.66211 L
2444.93943 665.66211 2447.16094 664.01093 2447.16094 660.82252 C
2447.16094 660.72643 L
@c
2508.74249 648.54142 m
2508.74249 648.64006 L
2508.74249 654.53556 2504.86951 656.99773 2498.00060 658.79093 C
2492.14876 660.29131 2490.70337 661.01726 2490.70337 663.24132 C
2490.70337 663.33969 L
2490.70337 664.98661 2492.20120 666.28743 2495.05285 666.28743 C
2497.90904 666.28743 2500.86132 665.02998 2503.85953 662.95049 C
2507.72570 668.55940 L
2504.29691 671.31496 2500.08491 672.86551 2495.15603 672.86551 C
2488.23893 672.86551 2483.30778 668.80233 2483.30778 662.66419 C
2483.30778 662.55874 L
2483.30778 655.84091 2487.69836 653.94907 2494.52391 652.21540 C
2500.18101 650.76775 2501.34463 649.79887 2501.34463 647.90249 C
2501.34463 647.81773 L
2501.34463 645.83660 2499.50778 644.62025 2496.46139 644.62025 C
2492.59521 644.62025 2489.40482 646.22126 2486.35389 648.73843 C
2481.95424 643.45918 L
2486.01033 639.83792 2491.18894 638.04472 2496.31710 638.04472 C
2503.61660 638.04472 2508.74249 641.81707 2508.74249 648.54142 C
@c
2547.88753 638.53257 m
2547.88753 645.30057 L
2531.01203 645.30057 L
2531.01203 672.37767 L
2523.56825 672.37767 L
2523.56825 638.53257 L
2547.88753 638.53257 L
@c
2594.38025 655.45625 m
2594.38025 655.55461 L
2594.38025 665.17880 2586.88602 672.95934 2576.43950 672.95934 C
2565.99780 672.95934 2558.40038 665.07137 2558.40038 655.45625 C
2558.40038 655.36243 L
2558.40038 645.74277 2565.89461 637.95090 2576.33660 637.95090 C
2586.78765 637.95090 2594.38025 645.83660 2594.38025 655.45625 C
@c
2586.59745 655.36243 m
2586.59745 649.55622 2582.43817 644.81726 2576.43950 644.81726 C
2570.44110 644.81726 2566.18545 649.65458 2566.18545 655.45625 C
2566.18545 655.55461 L
2566.18545 661.35402 2570.35181 666.09269 2576.33660 666.09269 C
2582.34180 666.09269 2586.59745 661.25764 2586.59745 655.45625 C
2586.59745 655.36243 L
@c
2640.10110 643.31943 m
2640.10110 658.01906 L
2625.39666 658.01906 L
2625.39666 651.58328 L
2632.89770 651.58328 L
2632.89770 646.75502 L
2631.00586 645.39439 2628.59414 644.72343 2625.88450 644.72343 C
2619.88611 644.72343 2615.62819 649.26539 2615.62819 655.45625 C
2615.62819 655.55461 L
2615.62819 661.30809 2619.93855 666.09269 2625.35301 666.09269 C
2629.26510 666.09269 2631.58980 664.83524 2634.19852 662.66419 C
2638.88929 668.31902 L
2635.35987 671.31496 2631.69298 672.95934 2625.59367 672.95934 C
2615.35096 672.95934 2607.84765 665.07137 2607.84765 655.45625 C
2607.84765 655.36243 L
2607.84765 645.34876 2615.10123 637.95090 2625.63477 637.95090 C
2631.82819 637.95090 2636.61732 640.36942 2640.10110 643.31943 C
@c
2688.57950 638.53257 m
2674.06753 672.62485 L
2667.20315 672.62485 L
2652.69572 638.53257 L
2660.28860 638.53257 L
2663.37808 646.12743 L
2677.70239 646.12743 L
2680.79443 638.53257 L
2688.57950 638.53257 L
@c
2675.03386 652.70551 m
2666.04180 652.70551 L
2670.54491 663.67644 L
2675.03386 652.70551 L
@c
2732.21830 638.53257 m
2732.21830 672.37767 L
2724.87288 672.37767 L
2724.87288 651.53509 L
2709.00964 672.37767 L
2702.14526 672.37767 L
2702.14526 638.53257 L
2709.49068 638.53257 L
2709.49068 660.05065 L
2725.88287 638.53257 L
2732.21830 638.53257 L
@c
F

@rax %Note: Object
2368.75918 828.23669 2652.04035 1089.29480 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2541.68589 1068.14069 m
2513.23427 1068.14069 2484.78463 1068.14069 2456.33301 1068.14069 C
2447.18901 1052.30268 L
2443.11789 1045.25150 2439.04649 1038.20003 2434.97537 1031.14885 C
2423.90778 1011.97871 L
2448.22110 1011.97871 L
2450.31789 1015.25669 L
2474.01553 1052.30268 L
2548.40513 1052.30268 L
2556.29310 1064.63395 2564.17937 1076.96438 2572.06734 1089.29480 C
2594.84372 1089.29480 L
2651.69509 990.82403 L
2627.26753 990.82403 L
2612.54891 1016.31742 2597.83058 1041.81080 2583.11282 1067.30476 C
2569.27209 1045.66677 L
2604.35169 990.82403 L
2506.11335 990.82403 L
2486.02932 959.42608 L
2506.96148 926.70293 L
2601.93288 926.70293 L
2591.07024 909.72170 2580.20872 892.74019 2569.34636 875.75953 C
2575.02869 866.87575 L
2584.32973 852.33543 L
2592.72482 866.87575 L
2604.93817 888.03043 L
2627.61335 927.30586 L
2652.04035 927.30586 L
2597.16898 832.26416 L
2594.84372 828.23669 L
2574.63269 828.23669 L
2566.39408 841.11647 2558.15518 853.99654 2549.91713 866.87575 C
2471.04000 866.87575 L
2446.30318 905.54825 L
2423.91033 905.54825 L
2456.33301 849.39024 L
2539.51030 849.39024 L
2552.37902 828.23669 L
2516.29228 828.23669 2480.20639 828.23669 2444.11965 828.23669 C
2425.17061 861.05906 2406.22157 893.88113 2387.27169 926.70293 C
2410.80860 926.70293 2434.34580 926.70293 2457.88384 926.70293 C
2461.49121 921.06312 L
2482.62066 888.03043 L
2500.54157 888.03043 2518.46447 888.03043 2536.38624 888.03043 C
2552.08365 888.03043 L
2563.28872 905.54825 L
2540.65266 905.54825 2518.01717 905.54825 2495.38110 905.54825 C
2486.28926 919.76202 2477.19742 933.97521 2468.10586 948.18813 C
2374.86671 948.18813 L
2368.75918 958.76589 L
2374.86529 969.34309 L
2467.26085 969.34309 L
2476.35184 983.55430 2485.44198 997.76665 2494.53298 1011.97871 C
2518.25839 1011.97871 2541.98324 1011.97871 2565.70866 1011.97871 C
2553.44683 1031.14885 L
2485.59506 1031.14885 L
2473.33238 1011.97871 L
2462.87395 995.62649 L
2459.80148 990.82403 L
2435.62394 990.82403 2411.44583 990.82403 2387.26828 990.82403 C
2399.48164 1011.97871 L
2406.43984 1024.03049 L
2418.20674 1044.41301 2429.56063 1064.07865 2444.11965 1089.29480 C
2481.64894 1089.29480 2519.17654 1089.29480 2556.70498 1089.29480 C
2541.68589 1068.14069 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel18Dict 18.0 0
%%EOF
